<?xml version="1.0" encoding="utf-8"?>
<ISIF_LSC_xml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <dcc_name>isif_lsc</dcc_name>
    <dcc_header>
        <camera_module_id>     10640 </camera_module_id>
        <dcc_descriptor_id>    2 </dcc_descriptor_id>
        <algorithm_vendor_id>  1 </algorithm_vendor_id>
        <tunning_tool_version> 0 </tunning_tool_version>
    </dcc_header>
    <!--=======================================================================-->
    <typedef>
        <isif_lsc_dcc_descriptor_t type="struct">
            <enable type="uint8"> </enable> <!-- enable/disable isif 2d lsc correction: 0,1 -->
            <use_calib type="uint16"> </use_calib>
            <lsc_hsize type="uint16"> </lsc_hsize> <!-- input image horizontal size: U14 -->
            <lsc_vsize type="uint16"> </lsc_vsize> <!-- input image vertical size: U14 -->
            <hdirection_data_offset type="uint16"> </hdirection_data_offset> <!-- horizontal direction data offset: U14 -->
            <vdirection_data_offset type="uint16"> </vdirection_data_offset> <!-- vertical direction data offset: U14 -->
            <hposin_paxel type="uint8"> </hposin_paxel> <!-- init_x (horizontal position in the paxel): U7 -->
            <vposin_paxel type="uint8"> </vposin_paxel> <!-- init_y (vertical position in the paxel): U7 -->
            <pax_height type="uint8"> </pax_height> <!-- paxel_height = 2^pax_height: U3 -->
            <pax_length type="uint8"> </pax_length> <!-- paxel_width = 2^pax_length: U3 -->
            <gain_format type="uint8"> </gain_format> <!-- lsc gain fixed-point format enum: U3 -->
            <offset_scaling_factor type="uint8"> </offset_scaling_factor> <!-- offset scale factor, a: U8Q7 -->
            <offset_shift_value type="int8"> </offset_shift_value> <!-- offset shift value, T: S8 -->
            <offset_enable type="uint8"> </offset_enable> <!-- enable/disable isif 2d offset map: 0,1 -->
            <gain_table_size type="uint16"> </gain_table_size> <!-- size = (ceil( (INIT_X + IMG_WIDTH) / (2^M) ) + 1) * (ceil( (INIT_Y + IMG_HEIGHT) / (2^N) ) + 1) * 4 (bytes) -->
            <lsc_table type="uint8*"> </lsc_table> <!-- lsc gain table -->
            <offset_table_size type="uint16"> </offset_table_size> <!-- size = (ceil( (INIT_X + IMG_WIDTH) / (2^M) ) + 1) * (ceil( (INIT_Y + IMG_HEIGHT) / (2^N) ) + 1) * 4 (bytes) -->
            <offset_table type="uint8*"> </offset_table> <!-- lsc offset table -->
        </isif_lsc_dcc_descriptor_t>
    </typedef>
    <!--=======================================================================-->

    <use_case val="1023">
        <n-space>

            <region0 class="0">
                <colortemperature val="2" min="0" max="20000">  </colortemperature>
                <exposure val="1" min="0" max="10000000">  </exposure>
                <gain val="0" min="0" max="1024">  </gain>
            </region0>

        </n-space>

        <parameter_package>
            <isif_lsc_dcc type="isif_lsc_dcc_descriptor_t">
            {
                0, // enable
                0, // use_calib
                1280, // lsc_hsize
                720, // lsc_vsize
                0, // hdirection_data_offset
                0, // vdirection_data_offset
                0, // hposin_paxel
                0, // vposin_paxel
                6, // pax_height
                6, // pax_length
                5, // gain_format
                0, // offset_scaling_factor
                0, // offset_shift_value
                0, // offset_enable
                1092, // gain_table_size
                {
255 255 255 255 255 255 255 255 255 255 255 255 141 137 171 139 87 85 107 86 63 62 81 63 50 50 64 49 42 42 55 42 37 37 49 38 35 35 46 35 36 36 45 35 35 35 44 35 37 36 46 36 40 39 52 40 46 45 60 45 55 55 72 55 73 71 91 71 103 97 125 100 184 174 214 175 255 255 255 255 255 255 255 255
229 216 255 220 229 216 255 220 161 158 194 162 89 88 111 88 61 61 78 61 46 46 60 46 37 37 48 37 31 31 41 31 27 27 36 26 25 25 33 24 24 25 33 24 24 24 32 24 26 27 34 25 30 29 39 29 35 34 45 35 43 43 56 42 55 53 70 54 74 71 93 72 112 109 137 110 196 197 231 198 196 197 231 198
129 126 165 128 129 126 165 128 103 102 128 105 65 65 83 65 46 46 60 46 35 35 46 35 27 27 36 28 21 22 30 22 18 18 25 18 16 16 22 15 15 16 22 15 16 16 21 16 18 18 25 17 22 22 29 21 27 27 36 27 34 33 44 34 44 43 57 43 58 55 74 57 83 80 103 81 124 123 150 124 124 123 150 124
100 96 124 97 100 96 124 97 80 79 103 82 54 53 69 55 39 39 51 39 29 29 39 29 22 22 30 22 16 17 22 16 12 12 16 12 9 9 12 9 8 8 11 8 9 9 12 9 12 12 16 11 16 16 22 16 22 22 29 21 28 28 37 28 37 37 49 37 50 48 63 49 69 67 87 68 96 95 120 97 96 95 120 97
84 83 108 83 84 83 108 83 70 70 89 71 48 48 62 48 35 35 46 35 25 26 34 25 18 19 25 18 12 13 16 12 7 7 9 7 4 4 5 4 4 3 5 4 5 4 6 4 7 7 9 7 12 12 16 11 18 19 24 18 25 25 32 25 33 32 43 33 45 43 58 44 62 61 79 61 85 83 106 85 85 83 106 85
78 76 97 78 78 76 97 78 66 64 84 66 45 45 59 46 32 33 43 33 24 24 31 24 16 17 22 16 9 9 12 9 4 4 5 4 2 2 2 2 2 1 2 1 2 2 3 2 5 5 5 4 10 9 12 9 16 16 21 15 23 23 30 22 32 31 41 31 43 42 55 42 59 57 74 58 81 76 100 79 81 76 100 79
76 72 95 73 76 72 95 73 63 62 81 64 44 44 57 44 31 32 42 31 22 23 30 23 15 16 21 15 8 8 10 8 3 3 4 3 1 1 1 1 1 1 1 1 2 2 2 2 4 4 4 4 9 9 11 9 15 16 20 15 22 23 29 22 31 31 39 31 42 41 54 42 59 56 74 57 79 75 96 78 79 75 96 78
77 77 102 79 77 77 102 79 66 67 85 68 45 45 59 46 33 33 44 33 24 25 32 24 16 18 22 17 10 10 13 10 5 5 5 5 2 2 3 3 2 2 2 2 3 3 3 3 5 5 6 5 10 10 12 10 16 16 21 16 23 24 30 23 32 32 41 32 44 42 55 43 59 58 75 59 79 79 101 81 79 79 101 81
88 86 111 89 88 86 111 89 74 74 95 76 50 50 65 51 37 37 48 37 27 28 36 27 20 21 26 20 14 15 18 14 9 10 11 9 6 6 7 7 6 6 7 6 7 7 8 7 9 9 11 9 14 15 18 14 20 20 26 19 27 27 33 26 36 35 45 35 48 46 60 47 65 63 82 65 89 87 110 91 89 87 110 91
112 105 137 110 112 105 137 110 90 89 113 91 59 59 76 60 43 43 56 44 33 33 43 33 25 26 33 25 20 21 26 20 15 16 20 16 13 14 17 13 13 13 17 13 13 14 18 13 15 16 21 15 19 20 25 19 25 25 31 25 32 32 40 32 41 40 52 41 55 52 68 54 76 74 94 75 111 107 134 110 111 107 134 110
153 150 190 154 153 150 190 154 117 117 146 119 73 72 92 73 52 52 68 53 40 40 52 41 32 32 42 32 26 27 34 26 22 23 29 23 20 21 27 21 20 21 27 21 20 21 26 20 23 23 29 23 26 26 33 26 30 29 38 30 39 39 49 39 50 48 62 49 65 64 82 64 95 91 115 94 152 147 181 152 152 147 181 152
255 255 255 255 255 255 255 255 190 188 230 196 99 98 123 102 68 67 86 69 51 51 66 52 41 40 53 41 36 35 46 36 31 31 40 32 29 30 38 30 29 29 38 30 30 29 37 30 31 31 40 31 35 34 44 35 41 40 51 40 49 47 61 48 62 60 77 62 84 80 104 83 133 128 161 131 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 190 188 230 196 99 98 123 102 68 67 86 69 51 51 66 52 41 40 53 41 36 35 46 36 31 31 40 32 29 30 38 30 29 29 38 30 30 29 37 30 31 31 40 31 35 34 44 35 41 40 51 40 49 47 61 48 62 60 77 62 84 80 104 83 133 128 161 131 255 255 255 255 255 255 255 255
}
, // lsc_table
                1092, // offset_table_size
                NULL  // offset_table
            }
            </isif_lsc_dcc>
        </parameter_package>

    </use_case>

    <!--=====================================================================-->
</ISIF_LSC_xml>
